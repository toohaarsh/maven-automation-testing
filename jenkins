pipeline {
    agent any

    environment {
        // Set the SonarQube server URL and authentication token
        SONARQUBE_URL = 'http://your-sonarqube-server-url'
        SONARQUBE_TOKEN = 'your-sonar-token'
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout code from GitHub
                git 'https://github.com/your-username/your-repository.git'
            }
        }

        stage('Build') {
            steps {
                // Run Maven build (compile, test, package)
                script {
                    // Run Maven goals to clean, compile, and package the project
                    sh 'mvn clean install'
                }
            }
        }

        stage('Run Automation Tests') {
            steps {
                // Run automation tests (e.g., JUnit tests)
                script {
                    // Run Maven test phase to execute unit tests
                    sh 'mvn test'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                // Run SonarQube analysis using the SonarScanner plugin
                script {
                    // Run SonarQube analysis with the SonarScanner plugin
                    sh '''
                    mvn sonar:sonar \
                    -Dsonar.projectKey=your-project-key \
                    -Dsonar.host.url=$SONARQUBE_URL \
                    -Dsonar.login=$SONARQUBE_TOKEN
                    '''
                }
            }
        }
    }

    post {
        success {
            echo 'Build and analysis completed successfully!'
        }
        failure {
            echo 'Build or analysis failed.'
        }
    }
}
